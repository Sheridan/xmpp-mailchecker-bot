#!/usr/bin/env python2
# -*- coding: utf8 -*-

import sys, string, xmpp, os.path, poplib, imaplib, time, signal, os, hashlib, json, traceback, re, sqlite3
from email import parser
from email.header import decode_header
from threading import Thread, Lock

sys.path.append(os.path.abspath('/usr/local/lib/xmpp-mailchecker-bot/'))
import XMPPLogger, MailCheck, Storage, Bot



json_data=open('/etc/xmpp-mailchecker-bot.conf')
config = json.load(json_data)
json_data.close()

json_data=open('/usr/local/share/xmpp-mailchecker-bot/%s'%config['lang'])
i18 = json.load(json_data)
json_data.close()

logger = XMPPLogger.CXMPPLogger(config)
storage = Storage.CDBStorage()
storage.init(config['database_file'])
bot = Bot.CBot(i18, config, storage, MailCheck.CMailCheckers(i18, config, storage, logger), logger, config['bot_auth']['jid'], config['bot_auth']['pwd'], config['bot_auth']['res'])

def termHSignal(signum, frame):
    bot.quit(i18['log']['bot_sig_stopping']%bot.jid.getStripped())

signal.signal(signal.SIGINT, termHSignal)
signal.signal(signal.SIGTERM, termHSignal)

logger.setBot(bot)

bot.run()

